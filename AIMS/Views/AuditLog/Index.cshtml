@* ======================================================================
   AIMS View: AuditLog/Index
   ----------------------------------------------------------------------
   Purpose
   - Aligns with Admin table chrome
   - Supports client-side filtering + realtime/polling
   - Adds pagination chrome consistent with Search page
   - Row click opens a read-only details modal (optional UX)

   Conventions
   1) Layout
      - Inherits global layout: ~/Views/Shared/_Layout.cshtml

   2) Styles
      - Admin chrome: ~/css/pages/admin.index.css
      - Pager:        ~/css/components/_Pager.css
      - Page CSS:     ~/css/pages/auditlog.index.css

   3) Scripts
      - Page JS:      ~/js/pages/auditlog.index.js
      - Inline: Task 4A modal trigger (kept)
      - SignalR:      ~/lib/microsoft/signalr/dist/browser/signalr.min.js

   4) Routing
      - Controller: Controllers/Mvc/AuditLogController.cs
      - Action:     Index()
      - Route:      /AuditLog or /AuditLog/Index

   5) Notes
      - Indentation: 4 spaces
      - Table body is client-filled; no demo rows
   ====================================================================== *@

@inject Microsoft.Extensions.Configuration.IConfiguration Config

@{
    ViewData["Title"] = "Audit Log";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <!-- bring in the Admin table baseline -->
    <link rel="stylesheet" href="~/css/pages/admin.index.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/components/_Pager.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/pages/auditlog.index.css" asp-append-version="true" />
}

<div class="audit-log-container">
    <div class="d-flex align-items-center justify-content-between mb-3">
        <h1 class="audit-log-title m-0">Audit Log</h1>

        <!-- Filter icon (from Task 4A) -->
        <div class="ms-3">
            <partial name="_FilterIcon"
                view-data='@new ViewDataDictionary(ViewData) { ["Id"]="auditLogFilter", ["Label"]="Search Logs" }' />
        </div>
    </div>

    @* hidden config for JS (polling interval / batch size / feature flags) *@
    <div id="auditlog-config"
         data-poll-interval="@Config["Audit:PollingIntervalMs"]"
         data-max-batch="@Config["Audit:MaxBatchSize"]"
         data-feature-realtime="@Config["Feature:AuditRealTime"]"
         data-feature-polling="@Config["Feature:AuditPollingFallback"]"
         hidden></div>

    <!-- Admin-style chrome -->
    <div class="table-wrapper">
        <!-- use the exact admin wrapper + scroll structure -->
        <div class="admin-table-wrapper">
            <div class="admin-table-scroll">
                <!-- Header table (fixed) -->
                <table class="admin-table-header">
                    <colgroup>
                        <col class="al-col-1" />
                        <col class="al-col-2" />
                        <col class="al-col-3" />
                        <col class="al-col-4" />
                        <col class="al-col-5" />
                        <col class="al-col-6" />
                        <col class="al-col-7" />
                        <col class="al-col-8" />
                    </colgroup>
                    <thead>
                        <tr>
                            <th>Log ID</th>
                            <th>Timestamp</th>
                            <th>User ID</th>
                            <th>Action</th>
                            <th>Asset ID</th>
                            <th>Previous Value</th>
                            <th>New Value</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                </table>

                <!-- Body table (scrolls) -->
                <table class="admin-table-body audit-log-table" id="auditTable" aria-describedby="audit-pager">
                    <colgroup>
                        <col class="al-col-1" />
                        <col class="al-col-2" />
                        <col class="al-col-3" />
                        <col class="al-col-4" />
                        <col class="al-col-5" />
                        <col class="al-col-6" />
                        <col class="al-col-7" />
                        <col class="al-col-8" />
                    </colgroup>
                    <tbody id="auditTableBody"><!-- filled by JS (realtime/polling/paging) --></tbody>
                </table>
            </div>
        </div>
    </div>

    @* ----------- Pager (same markup/classes as Search) ------------------ *@
    <div id="audit-pager" class="search-pager" hidden>
        <button id="pg-prev" class="pager-btn" type="button" aria-label="Previous page">Prev</button>
        <span id="pg-status" class="pager-status" role="status" aria-live="polite"></span>
        <button id="pg-next" class="pager-btn" type="button" aria-label="Next page">Next</button>
    </div>
    @* -------------------------------------------------------------------- *@
</div>

@* Include the existing modal from Task 4A *@
@await Html.PartialAsync("_SearchLogsModal")

@* ---------- NEW: Row Details Modal (read-only) ------------------------ *@
<div class="modal fade" id="auditRowModal" tabindex="-1" aria-labelledby="auditRowModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="auditRowModalLabel">Audit Entry</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <dl class="row audit-row-fields">
          <dt class="col-sm-3">Log ID</dt>        <dd class="col-sm-9" id="ar-id"></dd>
          <dt class="col-sm-3">Timestamp</dt>     <dd class="col-sm-9" id="ar-ts"></dd>
          <dt class="col-sm-3">User ID</dt>       <dd class="col-sm-9" id="ar-user"></dd>
          <dt class="col-sm-3">Action</dt>        <dd class="col-sm-9" id="ar-action"></dd>
          <dt class="col-sm-3">Asset ID</dt>      <dd class="col-sm-9" id="ar-asset"></dd>
          <dt class="col-sm-3">Previous Value</dt><dd class="col-sm-9" id="ar-prev"></dd>
          <dt class="col-sm-3">New Value</dt>     <dd class="col-sm-9" id="ar-new"></dd>
        </dl>
        <div class="mb-1 fw-semibold">Description</div>
        <textarea id="ar-desc" class="form-control audit-desc-box" rows="6" readonly></textarea>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn add-btn" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>
@* --------------------------------------------------------------------- *@

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js" asp-append-version="true"></script>
    <script src="~/js/pages/auditlog.index.js" asp-append-version="true" defer></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Target the FilterIcon button from Task 4A
            const root = document.querySelector('[data-component="filter-icon"][data-id="auditLogFilter"]');
            if (!root) return;

            const btn = root.querySelector('.aims-filter-btn');
            const dropdown = root.querySelector('.dropdown-menu');
            if (dropdown) dropdown.remove(); // remove old dropdown menu

            if (btn) {
                btn.removeAttribute('data-bs-toggle');
                btn.removeAttribute('aria-expanded');
                btn.setAttribute('type', 'button');
            }

            const modalEl = document.getElementById('searchLogsModal');
            if (btn && modalEl && window.bootstrap && bootstrap.Modal) {
                btn.addEventListener('click', (e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    bootstrap.Modal.getOrCreateInstance(modalEl).show();
                });
            }
        });
    </script>
}