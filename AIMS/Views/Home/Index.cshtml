@using System.Text.Json
@using AIMS.ViewModels
@{
    ViewData["Title"] = "Home";
    // pick up the server snapshot the controller put in ViewData
    var snap = ViewData["CardSnapshot"];
}

@section Styles {
    <!-- Order matters: base site styles, component styles, then page-local styles -->
    <link rel="stylesheet" href="~/AIMS.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/_HomeCardComponent.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Views/Home/Index.cshtml.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/_DashboardSettings.css" asp-append-version="true" />
}

<!-- One unified settings trigger (fixed at top-right, opens the modal) -->
<button
  class="settings-btn"
  type="button"
  data-bs-toggle="modal"
  data-bs-target="#dashboardSettingsModal"
  aria-label="Open dashboard settings">
</button>

<!--
  Cards viewport
  - Fixed-height window under the navbar
  - Holds the gutter (outer padding) and the grid (2 rows; 3/2/1 columns)
-->
<section class="cards-viewport" role="region" aria-label="Asset categories">
    <div class="cards-gutter">
        <!-- Strict grid modes via JS (.mode-3x2 / .mode-2x2 / .mode-2x1) -->
        <div class="cards-grid mode-3x2 hydrating" id="cards-grid" data-testid="cards-grid">
            @await Html.PartialAsync("~/Views/Home/_HomePageCardComponent.cshtml")
        </div>

        <!-- Pager -->
        <nav class="cards-pager" aria-label="Card pagination">
            <button type="button" class="pager-btn" id="cards-prev" aria-label="Previous page">‹ Prev</button>
            <div class="pager-dots" id="cards-dots"></div>
            <button type="button" class="pager-btn" id="cards-next" aria-label="Next page">Next ›</button>
        </nav>
    </div>
</section>

@await Html.PartialAsync("~/Views/Shared/_DashboardSettings.cshtml")

@section Scripts {
    <script src="~/js/home.index.js" asp-append-version="true"></script>
    <script src="~/js/dashboard-settings.js" asp-append-version="true"></script>
    <script src="~/js/summary-cards.js" asp-append-version="true"></script>

    @* IMPORTANT: write the server snapshot OUTSIDE the grid so it’s not a grid item *@
    @if (snap is IEnumerable<AIMS.ViewModels.SummaryCards.SummaryCardDto> ss)
    {
        <script>
        (function(){
            try {
                const rows = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(
                    ss.Select(r => new {
                        assetType = r.AssetType,
                        total = r.Total,
                        available = r.Available,
                        threshold = r.Threshold,
                        isLow = (r.Threshold > 0 && r.Available < r.Threshold),
                        availablePercent = (r.Total > 0 ? (int)Math.Round((r.Available * 100.0)/r.Total) : 0)
                    })
                ));
                localStorage.setItem('dashboard:snapshot:v1', JSON.stringify({ ts: Date.now(), rows }));
            } catch {}
        })();
        </script>
    }
}