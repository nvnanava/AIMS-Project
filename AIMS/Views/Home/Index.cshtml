@using System.Text.Json;
@model AIMS.Controllers.HomeIndexViewModel

@{
    ViewData["Title"] = "Home Page";

    // Define Table Headers
    var tableHeaders = new List<string> { "Asset Name", "Type", "Tag #", "Assigned To", "Status" };

    // Define Table Data
    var tableData = new List<Dictionary<string, string>> {
new Dictionary<string, string> { {"Asset Name", "Lenovo ThinkPad E16"},
{"Type", "Laptop"}, {"Tag #", "LT-0020"}, {"Assigned To", "John Smith (28809)"},
{"Status", "Assigned"} },
new Dictionary<string, string> { {"Asset Name", "Dell S2421NX"},
{"Type", "Monitor"}, {"Tag #", "MN-0001"}, {"Assigned To", "Jane Doe (69444)"},
{"Status", "Assigned"} },
new Dictionary<string, string> { {"Asset Name", "Logitech Zone 300"},
{"Type", "Headset"}, {"Tag #", "HS-0080"}, {"Assigned To", "Unassigned"},
{"Status", "Available"} },
new Dictionary<string, string> { {"Asset Name", "Lenovo IdeaCentre 3"},
{"Type", "Desktop"}, {"Tag #", "DT-0011"}, {"Assigned To", "Randy Orton (58344)"},
{"Status", "Damaged"} },
new Dictionary<string, string> { {"Asset Name", "Microsoft 365 Business"},
{"Type", "Software"}, {"Tag #", "SW-0100"}, {"Assigned To", "Robin Williams (10971)"},
{"Status", "Assigned"} },
new Dictionary<string, string> { {"Asset Name", "HP 527SH"},
{"Type", "Monitor"}, {"Tag #", "MN-0023"}, {"Assigned To", "Sarah Johnson (62241)"},
{"Status", "In Repair"} },
new Dictionary<string, string> { {"Asset Name", "HP Pavillion TP01-2234"},
{"Type", "Desktop"}, {"Tag #", "DT-0075"}, {"Assigned To", "Unassigned"},
{"Status", "Available"} },
new Dictionary<string, string> { {"Asset Name", "Samsung Galaxy Book4"},
{"Type", "Laptop"}, {"Tag #", "LT-0005"}, {"Assigned To", "Caitlin Clark (90334)"},
{"Status", "Damaged"} },
new Dictionary<string, string> { {"Asset Name", "Logitech Zone Vibe 100"},
{"Type", "Headset"}, {"Tag #", "HS-0015"}, {"Assigned To", "Brian Regan (27094)"},
{"Status", "In Repair"} },
new Dictionary<string, string> { {"Asset Name", "Belkin BoostCharge 3.3ft USB-C"},
{"Type", "Charging Cable"}, {"Tag #", "CC-0088"}, {"Assigned To", "Unassigned"},
{"Status", "Available"} },
new Dictionary<string, string> { {"Asset Name", "Dell Inspiron 3030"},
{"Type", "Desktop"}, {"Tag #", "DT-0100"}, {"Assigned To", "Maximillian Brandt (20983)"},
{"Status", "Assigned"} },
new Dictionary<string, string> { {"Asset Name", "Poly Voyager 4320"},
{"Type", "Headset"}, {"Tag #", "HS-0001"}, {"Assigned To", "Emily Carter (47283)"},
{"Status", "In Repair"} },
new Dictionary<string, string> { {"Asset Name", "j5create 100W Super Charger"},
{"Type", "Charging Cable"}, {"Tag #", "CC-0019"}, {"Assigned To", "Bruce Wayne (34532)"},
{"Status", "Damaged"} },
new Dictionary<string, string> { {"Asset Name", "Dell Inspiron 15"},
{"Type", "Laptop"}, {"Tag #", "LT-0115"}, {"Assigned To", "Kate Rosenberg (93232)"},
{"Status", "Assigned"} }
};

    // Define Dummy Users (TODO: Replace with API Calls to Fetch Real Data)
    var users = new List<Dictionary<string, string>> {
new Dictionary<string, string> {
{"Name", "John Smith"}, {"Role", "Supervisor"}, {"ID", "28809"}
},
new Dictionary<string, string> {
{"Name", "Jane Doe"}, {"Role", "IT Help Desk"}, {"ID", "69444"}, {"Supervisor", "28809"}
},
new Dictionary<string, string> {
{"Name", "Randy Orton"}, {"Role", "IT Help Desk"}, {"ID", "58344"}, {"Supervisor", "28809"}
},
new Dictionary<string, string> {
{"Name", "Robin Williams"}, {"Role", "IT Help Desk"}, {"ID", "10971"}, {"Supervisor", "28809"}
},
new Dictionary<string, string> {
{"Name", "Sarah Johnson"}, {"Role", "Supervisor"}, {"ID", "62241"}
},
new Dictionary<string, string> {
{"Name", "Caitlin Clark"}, {"Role", "Supervisor"}, {"ID", "90334"}
},
new Dictionary<string, string> {
{"Name", "Brian Regan"}, {"Role", "Supervisor"}, {"ID", "27094"}
},
new Dictionary<string, string> {
{"Name", "Maximillian Brandt"}, {"Role", "Admin"}, {"ID", "20983"}
},
new Dictionary<string, string> {
{"Name", "Kate Rosenberg"}, {"Role", "Admin"}, {"ID", "93232"}
},
new Dictionary<string, string> {
{"Name", "Emily Carter"}, {"Role", "IT Help Desk"}, {"ID", "47283"}, {"Supervisor", "28809"}
},
new Dictionary<string, string> {
{"Name", "Bruce Wayne"}, {"Role", "IT Help Desk"}, {"ID", "34532"}, {"Supervisor", "28809"}
},
};

    var serializedTableData = JsonSerializer.Serialize(tableData);
    var serializedUsers = JsonSerializer.Serialize(users);
}

@section Styles {
    <link rel="stylesheet" href="~/css/_HomeCardComponent.css" asp-append-version="true" />
}

<!-- View switch (role demo UI behavior wired in JS) -->
<div id="view-switch-buttons" class="view-switch-buttons" data-testid="view-switch-buttons">
    <button id="view-toggle" class="standard-button" type="button" aria-controls="view-dropdown" aria-expanded="false"
        data-testid="toggle-view-dropdown">
        Change View
    </button>

    <div id="view-dropdown" class="view-dropdown" hidden data-testid="view-dropdown">
        <div class="view-label admin">
            <button id="switch-admin" class="standard-button" type="button" data-role="Admin"
                data-testid="switch-admin">
                Switch to Admin
            </button>
        </div>
        <div class="view-label supervisor">
            <button id="switch-supervisor" class="standard-button" type="button" data-role="Supervisor"
                data-testid="switch-supervisor">
                Switch to Supervisor
            </button>
        </div>
        <div class="view-label it-help-desk">
            <button id="switch-it-help-desk" class="standard-button" type="button" data-role="IT Help Desk"
                data-testid="switch-it-help-desk">
                Switch to IT Help Desk
            </button>
        </div>
    </div>
</div>

<!-- Summary cards / carousel -->
<div class="carousel-wrapper" data-testid="summary-cards-section">
    <button class="carousel-arrow left" type="button" aria-label="Scroll Left" data-dir="left">
        <img src="@Url.Content("~/CardComponentImages/left-arrow.svg")" alt="" />
    </button>

    <div class="carousel-viewport" role="region" aria-label="Asset types">
        <div id="card-carousel-track" class="card-carousel-track">
            @await Html.PartialAsync("~/Views/Home/_HomePageCardComponent.cshtml")
        </div>
    </div>

    <button class="carousel-arrow right" type="button" aria-label="Scroll Right" data-dir="right">
        <img src="@Url.Content("~/CardComponentImages/right-arrow.svg")" alt="" />
    </button>
</div>


<!-- Welcome Message (shown for Supervisor view) -->
<section id="role-message" class="role-message-container" data-testid="role-message" hidden>
    <h1 id="welcome-title" class="welcome-title" data-testid="welcome-title"></h1>
    <h2 id="welcome-subtitle" class="welcome-subtitle" data-testid="welcome-subtitle"></h2>
</section>

<!-- Asset Table Section -->
<section id="asset-management" class="asset-management">
    <header id="asset-header" class="asset-header">
        <div id="header-left-section" class="left-section">
            <!-- Search Bar -->
            <div id="asset-search-container" class="search-container">
                <button id="asset-search-addon" class="input-group-text search-icon" type="button"
                    aria-label="Run Search">🔍</button>
                <input type="text" id="asset-search-input" class="form-control search-input"
                    placeholder="Search for assets or employees..." aria-label="Search">
            </div>

            <!-- View Full List Button -->
            <a id="view-full-list-button" class="standard-button" data-testid="view-full-list-button"
                href="@Url.Action("Search", "Home")" style="text-decoration: none;">
                View Full List
            </a>

            <!-- Filter Button -->
            <div id="filter-button-container" class="dropdown" data-testid="filter-button">
                <button id="filter-button-toggle" class="standard-button dropdown-toggle" type="button"
                    aria-controls="filterDropdown" aria-expanded="false">
                    Filter
                </button>

                <div id="filterDropdown" class="dropdown-menu" hidden role="menu" aria-label="Asset filters">
                    <!-- My Assets -->
                    <div id="filter-my-assets-container" class="filter-section">
                        <label class="assets-parent">
                            <input type="checkbox" id="filter-my-assets">
                            My Assets
                        </label>
                    </div>

                    <!-- All My Direct Reports' Assets -->
                    <div id="filter-direct-reports-container" class="filter-section">
                        <button id="toggle-direct-reports" class="expandable" type="button"
                            aria-controls="reports-panel" aria-expanded="false">
                            Filter By Direct Report
                        </button>

                        <div id="reports-panel" class="nested-panel" hidden>
                            <!-- Parent -->
                            <label class="reports-parent">
                                <input type="checkbox" id="filter-all-reports">
                                All My Reports
                            </label>

                            <!-- Children populated by JS -->
                            <div id="reports-list" class="reports-children" role="group"
                                aria-labelledby="filter-all-reports">
                            </div>
                        </div>
                    </div>

                    <!-- Filter by Type -->
                    <div id="filter-type-container" class="filter-section">
                        <button id="toggle-type-dropdown" class="expandable" type="button"
                            aria-controls="types-dropdown" aria-expanded="false">
                            Filter By Type
                        </button>

                        <div id="types-dropdown" class="mt-2" hidden>
                            <label class="type-parent">
                                <input type="checkbox" id="filter-all-types"> All Types
                            </label>

                            <div id="types-list" class="type-children" role="group" aria-labelledby="filter-all-types">
                                <label><input type="checkbox" class="filter-type" value="Monitor"> Monitors</label>
                                <label><input type="checkbox" class="filter-type" value="Laptop"> Laptops</label>
                                <label><input type="checkbox" class="filter-type" value="Desktop"> Desktops</label>
                                <label><input type="checkbox" class="filter-type" value="Software"> Software</label>
                                <label><input type="checkbox" class="filter-type" value="Headset"> Headsets</label>
                                <label><input type="checkbox" class="filter-type" value="Charging Cable"> Charging
                                    Cables</label>
                            </div>
                        </div>
                    </div>

                    <!-- Filter by Status -->
                    <div id="filter-status-container" class="filter-section">
                        <button id="toggle-status-dropdown" class="expandable" type="button"
                            aria-controls="status-dropdown" aria-expanded="false">
                            Filter By Status
                        </button>

                        <div id="status-dropdown" class="mt-2" hidden>
                            <label class="status-parent">
                                <input type="checkbox" id="filter-all-status"> All Statuses
                            </label>

                            <div id="status-list" class="status-children" role="group"
                                aria-labelledby="filter-all-status">
                                <label><input type="checkbox" class="filter-status" value="Assigned"> Assigned</label>
                                <label><input type="checkbox" class="filter-status" value="Available"> Available</label>
                                <label><input type="checkbox" class="filter-status" value="In Repair"> In Repair</label>
                                <label><input type="checkbox" class="filter-status" value="Damaged"> Damaged</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @* Conditional, Entra-based display code*@
        @* @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
        { *@
            <div id="header-right-section" class="right-section" data-testid="assign-asset-section">
                <button id="assign-asset-button" class="assign-asset-button" type="button" data-bs-toggle="modal"
                    data-bs-target="#assignAssetModal">
                    Assign Asset
                </button>
            </div>
        @* } *@

    </header>

    <!-- Include Table Component -->
    @if (tableHeaders == null || tableData == null)
    {
        <p style="color: red;">Table Data is Missing!</p>
    }
    @await Html.PartialAsync("~/Views/Shared/_TableComponent.cshtml", Tuple.Create(tableHeaders, tableData))

    <!-- Include Modal HTML -->
    @await Html.PartialAsync("~/Views/Shared/_AssignAssetModal.cshtml", Model)

</section>

@section Scripts {
    <script>
        window.__TABLE_DATA__ = @Html.Raw(JsonSerializer.Serialize(tableData));
        window.__USERS__ = @Html.Raw(JsonSerializer.Serialize(users));
    </script>

    <script src="~/js/assignAssetModal.js" defer></script>
    <script src="~/js/home.index.js" asp-append-version="true" defer></script>
}