@await Html.PartialAsync("_AssetAddForm")  <!-- Calls the Add Asset Form-->

@section Styles {
    <link rel="stylesheet" href="~/css/AssetDetailsComponent.css" asp-asp-append-version="true"/>
    <link rel="stylesheet" href="~/css/_AssetButton.css" asp-asp-append-version="true"/>
    <link rel="stylesheet" href="~/css/_AddAssetForm.css" asp-asp-append-version="true"/>
}

@{
    var category = ViewData["Category"]?.ToString() ?? "Unknown";
    var tableHeaders = ViewData["TableHeaders"] as List<string>;
    var filteredData = ViewData["FilteredData"] as List<Dictionary<string, string>>;
    var specsData = ViewData["SpecsData"] as Dictionary<string, Dictionary<string, string>>;

    ViewData["Title"] = $"{category} Asset Details";
}
<script>
    const specsData = @Html.Raw(Json.Serialize(ViewData["SpecsData"])); //gives access top specsData in JavaScript
</script>

<h2 class="text-center my-4">@ViewData["Title"]</h2>

@if (filteredData != null && filteredData.Any())
{
    <table class="asset-table">
        <thead>
            <tr>
                @foreach (var header in tableHeaders)
                {
                    if (header == "Status")
                    {
                        <th class="d-flex justify-content-between align-items-center" style="gap: 10px;">
    <span>Status</span>
    <div style="margin-left: auto;">
        @await Html.PartialAsync("_AssetButton")

    </div>
</th>

                    }
                    else
                    {
                        <th>@header</th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var row in filteredData)
            {
                @* <tr onclick="showPopup('@row["Asset Name"]', '@row["Tag #"]')"> *@
                <tr onclick="showPopup('@row["Asset Name"]', '@row["Tag #"]', event)">


                    @foreach (var header in tableHeaders)
                    {
                        if (header == "Status")
                        {
                            var status = row[header];
                            var statusClass = status.ToLower() switch
                            {
                                "available" => "status-available",
                                "assigned" => "status-assigned",
                                "marked for survey" => "status-marked-for-survey",
                                "in repair" => "status-in-repair",

                                _ => ""
                            };
                            <td><span class="status-badge @statusClass">@status</span></td>
                        }
                        else
                        {
                            <td>@row[header]</td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p class="text-center">No assets found for <strong>@category</strong>.</p>
}
<div id="popup" style="
    display: none;
    position: fixed;
    background: white;
    padding: 12px 16px;
    border: 1.5px solid #ccc;
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    font-size: 0.85rem;
    max-width: 220px;
    width: max-content;
    word-wrap: break-word;
    line-height: 1.4;
    z-index: 1000;
">
    <!-- content will be filled by JavaScript -->
</div>

<script>
function showPopup(assetName, tagNumber, event) {



    var popup = document.getElementById("popup");

    var rect = event.target.getBoundingClientRect(); //get position of the clicked element
    popup.style.top = (rect.top + window.scrollY) + "px"; //set the top position of the popup
    popup.style.left = (rect.left + window.scrollX) + "px"; //set the left position of the popup"


    popup.innerHTML = "<strong>Asset Name:</strong> " + assetName + "<br><strong>Tag Number:</strong> " + tagNumber + "<br>";

    if (specsData[tagNumber]) {
        for (var spec in specsData[tagNumber]) {
            popup.innerHTML += "<strong>" + spec + ":</strong> " + specsData[tagNumber][spec] + "<br>";
        }
    }

    popup.style.display = "block";
    event.stopPropagation(); // â›” Prevent auto-close from doc listener
}
    document.addEventListener("click", function (event) {
    var popup = document.getElementById("popup");

    // Only close if popup is visible and the click target is NOT the popup
    if (popup.style.display === "block" && !popup.contains(event.target)) {
        popup.style.display = "none";
    }
});



</script>
