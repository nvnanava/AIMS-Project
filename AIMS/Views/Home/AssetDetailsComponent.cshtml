@await Html.PartialAsync("_AssetAddForm")
@await Html.PartialAsync("_EditAssetForm")
@await Html.PartialAsync("_AddCategoryForm")
@await Html.PartialAsync("_SoftwareAddForm")
@using AIMS.Helpers <!-- For role based feature lockdown -->



@section Styles {
  <link rel="stylesheet" href="~/css/AssetDetailsComponent.css" asp-asp-append-version="true" />
  <link rel="stylesheet" href="~/css/_AssetButton.css" asp-asp-append-version="true" />
  <link rel="stylesheet" href="~/css/_AssetAddForm.css" asp-asp-append-version="true" />
}


@{
  var category = ViewData["Category"]?.ToString() ?? "Unknown";
  ViewData["Title"] = $"{category} Asset Details";
}
<script>
  // Share specs with JS for the popup
  const specsData = @Html.Raw(Json.Serialize(ViewData["SpecsData"]));
</script>

<h2 class="text-center my-4">@ViewData["Title"]</h2>

<div class="table-wrapper" style="position: relative; width: fit-content; margin: 0 auto;">
  <!-- Manage Asset button positioned relative to table -->


  <table class="asset-table">
    <thead>
      <tr>
        <th>Asset Name</th>
        <th>Type</th>
        <th>Tag #</th>
        <th>Status</th>
        <th>
          <div style="margin-left: auto;">
          @if (User.IsAdmin()) { // Only show the Add button to admins
             @await Html.PartialAsync("_AssetButton")
             }
          </div>
        </th>
      </tr>
    </thead>
    <tbody id="assetTableBody">
      <!-- Filled dynamically -->
    </tbody>
  </table>
</div>

<p id="emptyMessage" class="text-center" style="display:none;">
  No assets found for <strong>@category</strong>.
</p>

<div id="popup" style="
    display: none;
    position: fixed;
    background: white;
    padding: 12px 16px;
    border: 1.5px solid #ccc;
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    font-size: 0.85rem;
    max-width: 220px;
    width: max-content;
    word-wrap: break-word;
    line-height: 1.4;
    z-index: 1000;
">
  <!--filled by JavaScript -->
</div>

<script>
  //load assets depending on the category or kind of asset
  async function loadAssets(category) {
    try {
      const res = await fetch(`/api/assets?page=1&pageSize=50&types=${category}`);
      if (!res.ok) throw new Error("Failed to load assets");
      const data = await res.json();

      const tbody = document.getElementById("assetTableBody");
      const emptyMsg = document.getElementById("emptyMessage");
      tbody.innerHTML = "";

      if (!data.items || data.items.length === 0) {
        emptyMsg.style.display = "block";
        return;
      }
      emptyMsg.style.display = "none";

      data.items.forEach(asset => {
        const row = document.createElement("tr");
        row.onclick = (event) => showPopup(asset.assetName, asset.tag, event);

        let statusClass = "";
        switch (asset.status.toLowerCase()) {
          case "available": statusClass = "status-available"; break;
          case "assigned": statusClass = "status-assigned"; break;
          case "marked for survey": statusClass = "status-marked-for-survey"; break;
          case "in repair": statusClass = "status-in-repair"; break;
        }


        row.innerHTML = `
                    <td>${asset.assetName}</td>
                    <td>${asset.type}</td>
                    <td>
                        <span onclick="showPopup('${asset.assetName}', '${asset.tag}', event)" style="cursor:pointer;">
                            ${asset.tag}
                        </span>
                    </td>
                    <td><span class="status-badge ${statusClass}">${asset.status}</span></td>
                    <td class="actions-cell text end" onclick="event.stopPropagation()">
                    @if (User.IsAdmin())
                                { // Only show the Edit button to admins
                                <button type="button"
                                class="action-btn blue-pencil"
                                aria-label="Edit ${asset.assetName}"
                                title="Edit asset"
                                data-bs-toggle="modal"
                                data-hardware-id="${asset.hardwareID || ''}"
                                data-software-id="${asset.softwareID || ''}"
                                data-bs-target="#editAssetModal"
                                data-name="${asset.assetName}"
                                data-type="${asset.type}"
                                data-tag="${asset.tag}"
                                data-comments="${asset.comment}"
                                data-status="${asset.status}">
                            <svg viewBox="0 0 16 16" width="16" height="16" class="pencil-svg" aria-hidden="true">
                            <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3z"></path>
                            <path d="M.146 13.854a.5.5 0 0 0 .168.11l4.39 1.464a.5.5 0 0 0 .498-.13l9-9L10.5 1.793l-9 9a.5.5 0 0 0-.13.498L.854 15.854a.5.5 0 0 0-.708-.708L.146 13.854z"></path>
                            </svg>
                        </button>
                        }
                    </td>
                `;

        tbody.appendChild(row);
      });
    } catch (err) {
      console.error(err);
    }
  }


  document.addEventListener("DOMContentLoaded", () => {
    const urlParams = new URLSearchParams(window.location.search);
    const category = urlParams.get("category") || "@category";
    loadAssets(category);
  });

  function showPopup(assetName, tagNumber, event) {
    const popup = document.getElementById("popup");
    const rect = event.target.getBoundingClientRect();
    popup.style.top = (rect.top + window.scrollY + 20) + "px";
    popup.style.left = (rect.left + window.scrollX + 20) + "px";

    popup.innerHTML = `
    <strong>Asset Name:</strong> ${assetName ?? ""}<br>
    <strong>Tag Number:</strong> ${tagNumber ?? ""}<br>
  `;

    popup.style.display = "block";
    popup.setAttribute("aria-hidden", "false");
    event.stopPropagation();
  }

  document.addEventListener("click", function (event) {
    const popup = document.getElementById("popup");
    if (popup && popup.style.display === "block" && !popup.contains(event.target)) {
      popup.style.display = "none";
      popup.setAttribute("aria-hidden", "true");
    }
  });
</script>
