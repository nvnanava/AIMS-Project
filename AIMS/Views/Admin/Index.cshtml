@* ======================================================================
   AIMS View: Admin/Index
   ----------------------------------------------------------------------
   Purpose
   - Displays and manages AAD users (add/edit/filter/sort).
   - Uses mock data for front-end UX testing (replace with real DB/Graph calls).

   What’s on this page
   - Users table with role/status filters and sortable Status column.
   - Triggers for Add/Edit User modals (rendered as partials).

   Conventions
   1) Layout
      - Inherits global layout from: ~/Views/Shared/_Layout.cshtml
      - Layout must include Bootstrap CSS and bootstrap.bundle.js.

   2) Styles
      - Page CSS:              ~/css/pages/admin.index.css
      - Component CSS (modals) ~/css/components/_AdminModals.css

   3) Scripts
      - Page JS: ~/js/pages/admin.index.js
      - bootstrap.bundle.js is required for modal behavior.

   4) Partials (rendered below the table wrapper)
      - _AddUserModal, _EditUserModal (Bootstrap + AIMS theming)

   5) Routing
      - Controller: Controllers/Mvc/AdminController.cs
      - Action:     Index()
      - Route:      /Admin or /Admin/Index

   6) Notes
      - Keep DOM IDs stable: addUserModal, editUserModal, addUserForm, editUserForm,
        adminTable, showInactive, roleFilter, aadUserResults.
      - Replace demo `users` array with live data once backend integration is ready.
   ====================================================================== *@

@using AIMS.Utilities
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    var users = new[]
    {
        new { Name = "John Smith",     Email = "john.smith@email.com",     Role = "Admin", Status = "Active",   SeparationDate = " " },
        new { Name = "Jane Doe",       Email = "jane.doe@email.com",       Role = "User",  Status = "Inactive", SeparationDate = "12/01/2024" },
        new { Name = "Max Taylor",     Email = "max.taylor@email.com",     Role = "Admin", Status = "Active",   SeparationDate = " " },
        new { Name = "Zara Khan",      Email = "zara.khan@email.com",      Role = "User",  Status = "Inactive", SeparationDate = "11/16/2023" },
        new { Name = "Leo Clark",      Email = "leo.clark@email.com",      Role = "Admin", Status = "Active",   SeparationDate = " " },
        new { Name = "Sophie Lee",     Email = "sophie.lee@email.com",     Role = "User",  Status = "Active",   SeparationDate = " " },
        new { Name = "Nina Patel",     Email = "nina.patel@email.com",     Role = "Admin", Status = "Active",   SeparationDate = " " },
        new { Name = "Andrew Jackson", Email = "andrew.jackson@email.com", Role = "User",  Status = "Inactive", SeparationDate = "10/31/2024" },
        new { Name = "Taylor Jackson", Email = "taylor.jackson@email.com", Role = "Admin", Status = "Active",   SeparationDate = " " },
        new { Name = "Michael Dawson", Email = "michael.dawson@email.com", Role = "User",  Status = "Inactive", SeparationDate = "09/15/2025" },
        new { Name = "Clint Clark",    Email = "clint.clark@email.com",    Role = "Admin", Status = "Active",   SeparationDate = " " },
        new { Name = "Tobi Brown",     Email = "tobi.brown@email.com",     Role = "User",  Status = "Active",   SeparationDate = " " }
    };
}

@section Styles {
    <link rel="stylesheet" href="~/css/pages/admin.index.css" asp-append-version="true" />
}

<div class="table-wrapper">

    <!-- Table Controls -->
    <div class="admin-table-controls">
        <div>
            <button class="add-btn" type="button" data-bs-toggle="modal" data-bs-target="#addUserModal">
                Add User
            </button>
        </div>
        <div class="admin-table-controls-right">
            <label class="toggle-container">
                <input type="checkbox" id="showInactive" onchange="AIMS.Admin.toggleInactiveUsers()" />
                <span class="slider"></span>
                Show Inactive Users
            </label>
            <select id="roleFilter" class="aims-select" onchange="AIMS.Admin.filterByRole()">
                <option value="All">All Roles</option>
                <option value="Admin">Admin</option>
                <option value="User">User</option>
            </select>
        </div>
    </div>

    <!-- Chrome wrapper: header (fixed) + body (scrolls) -->
    <div class="admin-table-chrome">
        <!-- Header table (fixed, outside the scroller) -->
        <table class="admin-table-header">
            <thead>
                <tr>
                    <th class="admin-col-1">Actions</th>
                    <th class="admin-col-2">Name</th>
                    <th class="admin-col-3">Email</th>
                    <th class="admin-col-4">Role</th>
                    <th class="admin-col-5" style="cursor:pointer;" onclick="AIMS.Admin.sortTable(4)">Status ⬍</th>
                    <th class="admin-col-6">Separation Date</th>
                </tr>
            </thead>
        </table>

        <!-- Scroll container with ONLY the body table -->
        <div class="admin-table-scroll">
            <table id="adminTable" class="admin-table-body" data-sort-dir="asc">
                <tbody>
                    @for (int i = 0; i < users.Length; i++)
                    {
                        var user = users[i];
                        var statusClass = user.Status?.ToLowerInvariant() ?? "active";
                        <tr class="user-row @statusClass">
                            <td>
                                <button class="icon-btn" title="Edit" onclick="AIMS.Admin.openEditUserModal(this)">
                                    <svg viewBox="0 0 16 16" width="16" height="16" aria-hidden="true" focusable="false">
                                        <path d="M12.146.146a.5.5 0 01.708 0l3 3a.5.5 0 010 .708l-9.793 9.793a.5.5 0 01-.168.11l-5 2a.5.5 0 01-.65-.65l2-5a.5.5 0 01.11-.168L12.146.146zM11.207 2L3 10.207V13h2.793L14 4.793 11.207 2z"></path>
                                    </svg>
                                </button>
                            </td>
                            <td>@user.Name</td>
                            <td>@user.Email</td>
                            <td>@user.Role</td>
                            <td><span class="badge @statusClass">@user.Status</span></td>
                            <td>@user.SeparationDate</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modals -->
@await Html.PartialAsync("_AddUserModal")
@await Html.PartialAsync("_EditUserModal")

@section Scripts {
    <script src="~/js/pages/admin.index.js" asp-append-version="true" defer></script>
}
