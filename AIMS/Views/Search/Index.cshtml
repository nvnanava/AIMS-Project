@* ======================================================================
   AIMS View: Search/Index
   ----------------------------------------------------------------------
   Purpose
   - Unified asset search with sticky header, toolbar filters, paging,
     and admin/supervisor assign/unassign actions via modals.
   ====================================================================== *@

@using AIMS.Utilities

@{
    ViewData["Title"] = "Search";
    var tableHeaders = new List<string> { "Asset Name", "Type", "Tag #", "Assignment", "Status" };

    // Server-rendered role flags
    var __CAN_ADMIN__ = User.IsAdminOrHelpdesk();
    var __IS_SUPERVISOR__ = User.IsSupervisor();
}

@section Styles {
    <link rel="stylesheet" href="~/AIMS.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/pages/search.index.css" asp-append-version="true" />
}

<!-- Expose tiny bootstrap vars to JS -->
<script>
    window.__CAN_ADMIN__ = @(__CAN_ADMIN__ ? "true" : "false");
    window.__IS_SUPERVISOR__ = @(__IS_SUPERVISOR__ ? "true" : "false");
    window.__ASSETS_VER__ = @CacheStamp.AssetsVersion;
</script>

<div class="page-fill">
    <div class="table-container">
        <!-- Sticky table header -->
        <table class="asset-table-header">
            <thead>
                <tr>
                    @foreach (var header in tableHeaders)
                    {
                        <th>@header</th>
                    }
                </tr>
            </thead>
        </table>

        <!-- Sticky toolbar -->
        <div class="table-toolbar">
            <div class="toolbar-grid">
                <div class="toolbar-cell">
                    <input class="search-input filter-input" type="text" name="Asset Name"
                        placeholder="Filter by Asset Name" />
                </div>
                <div class="toolbar-cell">
                    <select name="Type" class="filter-input form-select">
                        <option value="">All Devices</option>
                        <option>Desktop</option>
                        <option>Laptop</option>
                        <option>Headset</option>
                        <option>Charging Cable</option>
                        <option>Monitor</option>
                        <option>Software</option>
                    </select>
                </div>
                <div class="toolbar-cell">
                    <input class="filter-input search-input" type="text" name="Tag #" placeholder="Filter by Tag #" />
                </div>
                <div class="toolbar-cell">
                    <input class="filter-input search-input" type="text" name="Assignment"
                        placeholder="Filter by Assignment" />
                </div>
                <div class="toolbar-cell">
                    <select name="Status" class="filter-input form-select">
                        <option value="">All Status</option>
                        <option>Assigned</option>
                        <option>Available</option>
                        <option>In Repair</option>
                        <option>Damaged</option>
                        <option>Archived</option>
                    </select>
                </div>

                <!-- Right-aligned filter icon -->
                <div class="toolbar-cell" style="display:flex; justify-content:flex-end; align-items:center;">
                    @await Html.PartialAsync("_FilterIcon", new ViewDataDictionary(ViewData){
                    ["Id"] = "searchFilters",
                                        ["Label"] = "Show Archived"
                                        })
                </div>
            </div>
        </div>

        <!-- Scrolling table body -->
        <div class="table-body-scroll">
            <table class="asset-table-body">
                <tbody id="table-body"><!-- rows populated by JS --></tbody>
            </table>
        </div>

        <!-- Pager -->
        <div class="search-pager" id="search-pager" hidden>
            <button type="button" id="pg-prev" class="pager-btn">Prev</button>
            <span id="pg-status" class="pager-status"></span>
            <button type="button" id="pg-next" class="pager-btn">Next</button>
        </div>

        <div id="search-empty" class="search-empty" hidden>Enter a search to begin.</div>
    </div>
</div>

@* Assign/Unassign modals *@
@await Html.PartialAsync("_AssignAssetModal")
@await Html.PartialAsync("_UnassignAssetModal")

@section Scripts {
    <!-- Page modules -->
    <script src="~/js/pages/search.index.js" asp-append-version="true" defer></script>
    <script src="~/js/components/assignAssetModal.js" asp-append-version="true" defer></script>
    <script src="~/js/components/unassignAssetModal.js" asp-append-version="true" defer></script>
}